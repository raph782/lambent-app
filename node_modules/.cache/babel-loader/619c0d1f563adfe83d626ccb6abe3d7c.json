{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelnjoku/Desktop/react/lambent-app/src/components/Test.js\";\nimport React, { useState } from \"react\";\n\nfunction Goal({\n  goal,\n  index,\n  completeGoal,\n  removeGoal\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo\",\n    style: {\n      textDecoration: goal.isCompleted ? \"line-through\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, goal.text, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => completeGoal(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Complete\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeGoal(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"x\")));\n}\n\nfunction GoalForm({\n  addGoal\n}) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addGoal(value);\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Test() {\n  const [todos, setGoals] = useState([{\n    text: \"Learn about React\",\n    isCompleted: false\n  }, {\n    text: \"Meet friend for lunch\",\n    isCompleted: false\n  }, {\n    text: \"Build really cool todo app\",\n    isCompleted: false\n  }]);\n\n  const addGoal = text => {\n    const newGoals = [...todos, {\n      text\n    }];\n    setGoals(newGoals);\n  };\n\n  const completeGoal = index => {\n    const newGoals = [...todos];\n    newGoals[index].isCompleted = true;\n    setGoals(newGoals);\n  };\n\n  const removeGoal = index => {\n    const newGoals = [...todos];\n    newGoals.splice(index, 1);\n    setGoals(newGoals);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, todos.map((goal, index) => /*#__PURE__*/React.createElement(Goal, {\n    key: index,\n    index: index,\n    goal: goal,\n    completeGoal: completeGoal,\n    removeGoal: removeGoal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(GoalForm, {\n    addGoal: addGoal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Test;","map":{"version":3,"sources":["/Users/raphaelnjoku/Desktop/react/lambent-app/src/components/Test.js"],"names":["React","useState","Goal","goal","index","completeGoal","removeGoal","textDecoration","isCompleted","text","GoalForm","addGoal","value","setValue","handleSubmit","e","preventDefault","target","Test","todos","setGoals","newGoals","splice","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Goal({ goal, index, completeGoal, removeGoal }) {\n  return (\n    <div\n      className=\"todo\"\n      style={{ textDecoration: goal.isCompleted ? \"line-through\" : \"\" }}\n    >\n      {goal.text}\n\n      <div>\n        <button onClick={() => completeGoal(index)}>Complete</button>\n        <button onClick={() => removeGoal(index)}>x</button>\n      </div>\n    </div>\n  );\n}\n\nfunction GoalForm({ addGoal }) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addGoal(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nfunction Test() {\n  const [todos, setGoals] = useState([\n    {\n      text: \"Learn about React\",\n      isCompleted: false\n    },\n    {\n      text: \"Meet friend for lunch\",\n      isCompleted: false\n    },\n    {\n      text: \"Build really cool todo app\",\n      isCompleted: false\n    }\n  ]);\n\n  const addGoal = text => {\n    const newGoals = [...todos, { text }];\n    setGoals(newGoals);\n  };\n\n  const completeGoal = index => {\n    const newGoals = [...todos];\n    newGoals[index].isCompleted = true;\n    setGoals(newGoals);\n  };\n\n  const removeGoal = index => {\n    const newGoals = [...todos];\n    newGoals.splice(index, 1);\n    setGoals(newGoals);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"todo-list\">\n        {todos.map((goal, index) => (\n          <Goal\n            key={index}\n            index={index}\n            goal={goal}\n            completeGoal={completeGoal}\n            removeGoal={removeGoal}\n          />\n        ))}\n        <GoalForm addGoal={addGoal} />\n      </div>\n    </div>\n  );\n}\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}