{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelnjoku/Desktop/react/lambent-app/src/components/GoalsAdd.js\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nconst options = [\"Health Goal\", \"Money Goal\", \"Final Option Goal\"];\nexport default function GoalsAdd() {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    variant: \"contained\",\n    color: \"primary\",\n    ref: anchorRef,\n    \"aria-label\": \"split button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, options[selectedIndex]), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    \"aria-controls\": open ? \"split-button-menu\" : undefined,\n    \"aria-expanded\": open ? \"true\" : undefined,\n    \"aria-label\": \"select merge strategy\",\n    \"aria-haspopup\": \"menu\",\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, ({\n    TransitionProps,\n    placement\n  }) => /*#__PURE__*/React.createElement(Grow, Object.assign({}, TransitionProps, {\n    style: {\n      transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MenuList, {\n    id: \"split-button-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, options.map((option, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option,\n    disabled: index === 2,\n    selected: index === selectedIndex,\n    onClick: event => handleMenuItemClick(event, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }, option)))))))));\n}","map":{"version":3,"sources":["/Users/raphaelnjoku/Desktop/react/lambent-app/src/components/GoalsAdd.js"],"names":["React","Grid","Button","ButtonGroup","ArrowDropDownIcon","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","options","GoalsAdd","open","setOpen","useState","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClick","console","info","handleMenuItemClick","event","index","handleToggle","prevOpen","handleClose","current","contains","target","undefined","TransitionProps","placement","transformOrigin","map","option"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\n\nconst options = [\n  \"Health Goal\",\n  \"Money Goal\",\n  \"Final Option Goal\",\n];\n\nexport default function GoalsAdd() {\n  \n    const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\">\n      <Grid item xs={12}>\n        <ButtonGroup\n          variant=\"contained\"\n          color=\"primary\"\n          ref={anchorRef}\n          aria-label=\"split button\"\n        >\n          <Button onClick={handleClick}>{options[selectedIndex]}</Button>\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            aria-controls={open ? \"split-button-menu\" : undefined}\n            aria-expanded={open ? \"true\" : undefined}\n            aria-label=\"select merge strategy\"\n            aria-haspopup=\"menu\"\n            onClick={handleToggle}\n          >\n            <ArrowDropDownIcon />\n          </Button>\n        </ButtonGroup>\n        <Popper\n          open={open}\n          anchorEl={anchorRef.current}\n          role={undefined}\n          transition\n          disablePortal\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList id=\"split-button-menu\">\n                    {options.map((option, index) => (\n                      <MenuItem\n                        key={option}\n                        disabled={index === 2}\n                        selected={index === selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                      >\n                        {option}\n                      </MenuItem>\n                    ))}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}