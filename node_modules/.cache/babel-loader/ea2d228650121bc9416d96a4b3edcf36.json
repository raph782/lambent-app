{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelnjoku/Desktop/react/lambent-app/src/components/Test.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"../components.css\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport HealingIcon from \"@material-ui/icons/Healing\";\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\n\nfunction Goal({\n  goal,\n  index,\n  completeGoal,\n  removeGoal\n}) {\n  return (\n    /*#__PURE__*/\n    // <ListItem goals={goals} button>\n    //   <ListItemAvatar>\n    //     <HealingIcon />\n    //   </ListItemAvatar>\n    //   <ListItemText primary={goals.text} />\n    //   <ListItemSecondaryAction>\n    //     <Checkbox\n    //       edge=\"end\"\n    //       onChange={() => completeGoal(index)}\n    //       //   checked={checked.indexOf() !== -1}\n    //     />\n    //   </ListItemSecondaryAction>\n    // </ListItem>\n    React.createElement(\"div\", {\n      className: \"goal\",\n      style: {\n        textDecoration: goal.isCompleted ? \"line-through\" : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, goal.text, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => completeGoal(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Complete\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => removeGoal(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"x\")))\n  );\n}\n\nfunction GoalForm({\n  addGoal\n}) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addGoal(value);\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Test() {\n  const [goals, setGoals] = useState([{\n    text: \"Learn about React\",\n    isCompleted: false\n  }, {\n    text: \"Meet friend for lunch\",\n    isCompleted: false\n  }, {\n    text: \"Build really cool goal app\",\n    isCompleted: false\n  }]);\n\n  const addGoal = text => {\n    const newGoals = [...goals, {\n      text\n    }];\n    setGoals(newGoals);\n  };\n\n  const completeGoal = index => {\n    const newGoals = [...goals];\n    newGoals[index].isCompleted = true;\n    setGoals(newGoals);\n  };\n\n  const removeGoal = index => {\n    const newGoals = [...goals];\n    newGoals.splice(index, 1);\n    setGoals(newGoals);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"goal-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, goals.map((goal, index) => /*#__PURE__*/React.createElement(Goal, {\n    key: index,\n    index: index,\n    goal: goal,\n    completeGoal: completeGoal,\n    removeGoal: removeGoal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(GoalForm, {\n    addGoal: addGoal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Test;","map":{"version":3,"sources":["/Users/raphaelnjoku/Desktop/react/lambent-app/src/components/Test.js"],"names":["React","useState","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","HealingIcon","MonetizationOnIcon","Goal","goal","index","completeGoal","removeGoal","textDecoration","isCompleted","text","GoalForm","addGoal","value","setValue","handleSubmit","e","preventDefault","target","Test","goals","setGoals","newGoals","splice","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"../components.css\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport HealingIcon from \"@material-ui/icons/Healing\";\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\n\nfunction Goal({ goal, index, completeGoal, removeGoal }) {\n  return (\n    // <ListItem goals={goals} button>\n    //   <ListItemAvatar>\n    //     <HealingIcon />\n    //   </ListItemAvatar>\n    //   <ListItemText primary={goals.text} />\n    //   <ListItemSecondaryAction>\n    //     <Checkbox\n    //       edge=\"end\"\n    //       onChange={() => completeGoal(index)}\n    //       //   checked={checked.indexOf() !== -1}\n    //     />\n    //   </ListItemSecondaryAction>\n    // </ListItem>\n\n    <div\n      className=\"goal\"\n      style={{ textDecoration: goal.isCompleted ? \"line-through\" : \"\" }}\n    >\n      {goal.text}\n\n      <div>\n        <button onClick={() => completeGoal(index)}>Complete</button>\n        <button onClick={() => removeGoal(index)}>x</button>\n      </div>\n    </div>\n  );\n}\n\nfunction GoalForm({ addGoal }) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addGoal(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nfunction Test() {\n  const [goals, setGoals] = useState([\n    {\n      text: \"Learn about React\",\n      isCompleted: false,\n    },\n    {\n      text: \"Meet friend for lunch\",\n      isCompleted: false,\n    },\n    {\n      text: \"Build really cool goal app\",\n      isCompleted: false,\n    },\n  ]);\n\n  const addGoal = (text) => {\n    const newGoals = [...goals, { text }];\n    setGoals(newGoals);\n  };\n\n  const completeGoal = (index) => {\n    const newGoals = [...goals];\n    newGoals[index].isCompleted = true;\n    setGoals(newGoals);\n  };\n\n  const removeGoal = (index) => {\n    const newGoals = [...goals];\n    newGoals.splice(index, 1);\n    setGoals(newGoals);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"goal-list\">\n        {goals.map((goal, index) => (\n          <Goal\n            key={index}\n            index={index}\n            goal={goal}\n            completeGoal={completeGoal}\n            removeGoal={removeGoal}\n          />\n        ))}\n        <GoalForm addGoal={addGoal} />\n      </div>\n    </div>\n  );\n}\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}